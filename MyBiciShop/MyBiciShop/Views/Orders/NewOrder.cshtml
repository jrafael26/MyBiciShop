@model MyBiciShop.ViewModels.OrderView

@{
    ViewBag.Title = "NewOrder";
}

<h2>New Order</h2>
<h3>@ViewBag.Error</h3>

@using (Html.BeginForm("NewOrder", "Orders", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.Customers.customer_id, "customer_id", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("customer_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Customers.customer_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    @Html.ActionLink("Add Product", "AddProduct", new { }, new { @class="btn btn-primary"})
    <input type="submit" value="Save Order" class="btn btn-success" />
</div>

}

<br />
<h2>Order Details</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Product.product_name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.list_price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product.Valor)
        </th>

        <th></th>
    </tr>
    @for (int i = 0; i < Model.Products.Count; i++)

    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model.Products[i].product_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Products[i].list_price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Products[i].quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Products[i].Valor)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Products[i].product_id }) |
                @Html.ActionLink("Delete", "Delete", new { id = Model.Products[i].product_id })
            </td>
        </tr>
    }

</table>


@section scripts{
    <script>
        //Show Modal.
        function addNewOrder() {
            $("#newOrderModal").modal();
        }
        //Add Multiple Order.
        $("#addToList").click(function (e) {
            e.preventDefault();

            if ($.trim($("#productName").val()) == "" || $.trim($("#price").val()) == "" || $.trim($("#quantity").val()) == "") return;

            var productName = $("#productName").val(),
                price = $("#price").val(),
                quantity = $("#quantity").val(),
                detailsTableBody = $("#detailsTable tbody");

            var productItem = '<tr><td>' + productName + '</td><td>' + quantity + '</td><td>' + price + '</td><td>' + (parseFloat(price) * parseInt(quantity)) + '</td><td><a data-itemId="0" href="#" class="deleteItem">Remove</a></td></tr>';
            detailsTableBody.append(productItem);
            clearItem();
        });
        //After Add A New Order In The List, Clear Clean The Form For Add More Order.
        function clearItem() {
            $("#productName").val('');
            $("#price").val('');
            $("#quantity").val('');
        }
        // After Add A New Order In The List, If You Want, You Can Remove It.
        $(document).on('click', 'a.deleteItem', function (e) {
            e.preventDefault();
            var $self = $(this);
            if ($(this).attr('data-itemId') == "0") {
                $(this).parents('tr').css("background-color", "#ff6347").fadeOut(800, function () {
                    $(this).remove();
                });
            }
        });
        //After Click Save Button Pass All Data View To Controller For Save Database
        function saveOrder(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/Orders/SaveOrder",
                data: data,
                success: function (result) {
                    alert(result);
                    location.reload();
                },
                error: function () {
                    alert("Error!")
                }
            });
        }
        //Collect Multiple Order List For Pass To Controller
        $("#saveOrder").click(function (e) {
            e.preventDefault();

            var orderArr = [];
            orderArr.length = 0;

            $.each($("#detailsTable tbody tr"), function () {
                orderArr.push({
                    productName: $(this).find('td:eq(0)').html(),
                    quantity: $(this).find('td:eq(1)').html(),
                    price: $(this).find('td:eq(2)').html(),
                    amount: $(this).find('td:eq(3)').html()
                });
            });


            var data = JSON.stringify({
                name: $("#name").val(),
                address: $("#address").val(),
                order: orderArr
            });

            $.when(saveOrder(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });
        });
    </script>
}
